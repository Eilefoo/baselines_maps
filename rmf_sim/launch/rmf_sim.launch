<launch>
  <!-- All settings -->
  <arg name="rosbag_record" value="false"/>
  <arg name="robot_name" default="delta" />
  <arg name="gazebo_gui_en" default="true" />
  <arg name="use_sim_time" default="true" />
  <arg name="rviz_en" default="true" />
  <arg name="launch_prefix" default="" />
  <param name="use_sim_time" value="$(arg use_sim_time)" />

  <!--<env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rmf_sim)/models" />-->
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rmf_sim)/models:$(find rmf_sim)/models/SimpleShapes:$(find rmf_sim)/models:$(find rmf_sim)/models/SubT:$(find rmf_sim)/models/SubT/Artifacts:$(find rmf_sim)/models/SubT/CaveCircuit:$(find rmf_sim)/models/SubT/UrbanCircuit:$(find rmf_sim)/models/SubT/TunnelCircuit"/>

  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rmf_sim)/models" />
  
  <!--<arg name="world_file" default="$(find rmf_sim)/worlds/tunnel_less_obs.world" />-->
  <arg name="world_file" default="$(find rmf_sim)/worlds/random_corridor.world" /> 
  
  <node pkg="tf" type="static_transform_publisher" name="tf_1" args="0 0 0 0 0 0 $(arg robot_name)/base_link $(arg robot_name)/$(arg robot_name)/os1 10" /> 
  <!-- <node pkg="tf" type="static_transform_publisher" name="tf_1" args="0 0 0 0 0 0 $(arg robot_name)/base_link $(arg robot_name)/$(arg robot_name)/os0 10" />  -->

  <!-- ROS Gazebo  -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_file)" />
    <arg name="gui" value="$(arg gazebo_gui_en)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="paused" value="false" />
    <arg name="verbose" value="false" />
  </include>

  <!--<group ns="$(arg robot_name)">

    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg robot_name)" />
      <arg name="model" value="$(find rmf_sim)/rotors/urdf/$(arg robot_name).gazebo" />
      <arg name="enable_ground_truth" value="true" />
      <arg name="x" value="0.0" />
      <arg name="y" value="0.0" />
      <arg name="z" value="0.0" />
    </include>

    <node name="acc_command_converter" pkg="rotors_control" type="acc_command_converter" output="screen">
      <remap from="odometry" to="odometry_sensor1/odometry" /> 
      <param name="use_vehicle_frame" value="true" />
      <param name="use_yaw_stabilize" value="true" />

      <param name="eps_explore" value="0.0"/>
      <param name="noise_x" value="0.0"/>
      <param name="noise_y" value="0.0"/>
      <param name="noise_z" value="0.0"/>
      <rosparam command="load" file="$(find rmf_sim)/rotors/$(arg robot_name).yaml" />
      <rosparam command="load" file="$(find rmf_sim)/rotors/pid_position_$(arg robot_name).yaml" />
    </node>


    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node">
      <rosparam command="load" file="$(find rmf_sim)/rotors/roll_pitch_yawrate_thrust_controller_$(arg robot_name).yaml" />
      <rosparam command="load" file="$(find rmf_sim)/rotors/$(arg robot_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>

  </group> -->

  <!-- Rviz -->
  <group if="$(arg rviz_en)">
    <node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" args="-d $(find rmf_sim)/rviz/$(arg robot_name)_sim.rviz" output="screen" />
  </group>

  <!-- <node name="rostopic" pkg="rostopic" type="rostopic" args="pub /delta/goal geometry_msgs/Pose '{position: {x: 0.0, y: 0.0, z: 2.0}, orientation: {x: 0.0, y: 0.0, z: 0.0, w: 1.0}}' -1" /> -->

</launch>